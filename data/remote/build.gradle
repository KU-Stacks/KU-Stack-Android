plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'java-test-fixtures'
}

android {
    namespace 'com.ku_stacks.ku_ring.remote'
    compileSdk libs.versions.compileSdk.get().toInteger()

    defaultConfig {
        minSdk libs.versions.minSdk.get().toInteger()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            buildConfigField "String", "KURING_CAMPUS_OPEN_CHANNEL_URL", "\"kuring_campus_main_anonymous\""
            buildConfigField "String", "API_BASE_URL", "\"https://ku-ring.com/api/\""
        }
        debug {
            buildConfigField "String", "API_BASE_URL", "\"https://kuring.herokuapp.com/api/\""
            buildConfigField "String", "KURING_CAMPUS_OPEN_CHANNEL_URL", "\"kuring_main_anonymous\""
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }
    testOptions {
        unitTests {
            includeAndroidResources true
        }
    }
    testFixtures {
        enable true
    }
}

dependencies {
    implementation project(":common:util")

    // dagger hilt
    kapt libs.androidx.hilt.compiler
    implementation libs.hilt.android
    kapt libs.hilt.compiler
    androidTestImplementation  libs.hilt.android.testing
    kaptAndroidTest libs.hilt.compiler
    testImplementation libs.hilt.android.testing
    kaptTest libs.hilt.compiler

    // coroutines
    implementation libs.bundles.coroutines
    testImplementation libs.kotlinx.coroutines.test

    // retrofit
    implementation libs.bundles.retrofit

    // Timber
    implementation libs.timber

    // okHttp
    implementation libs.okhttp
    implementation libs.okhttp.logging.interceptor
    testImplementation libs.okhttp.mockwebserver

    // tests
    testImplementation libs.bundles.unit.test
}
