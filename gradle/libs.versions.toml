[versions]
# project-level dependency
android-gradle = "8.1.4"
kotlin = '1.8.22'
hilt = '2.45'
google-services = '4.4.1'
firebase-gradle = '2.9.9'
oss-licenses-version = '0.10.6'
compileSdk = "34"
targetSdk = "33"
minSdk = "24"
appVersion = "2.0.0"
versionCode = "34"

# app-level dependency
compose-compiler = '1.4.8'
compose-bom = '2024.01.00'
coil = '2.6.0'
fragment = '1.5.0'
kotlinx-coroutines = '1.8.0'
okhttp = '4.12.0'
paging = '3.2.1'
retrofit = '2.11.0'
room = '2.4.0-alpha03'
startup-runtime = '1.1.0'
swiperefreshlayout = '1.2.0-alpha01'
viewpager2 = '1.0.0'
firebase = '33.0.0'
work = '2.7.1'
desugarJdk = "2.0.4"
crashlytics = "2.9.9"

[libraries]
# Project-level dependencies
android-gradle = { module = 'com.android.tools.build:gradle', version.ref = 'android-gradle' }
kotlin-gradle = { module = 'org.jetbrains.kotlin:kotlin-gradle-plugin', version.ref = 'kotlin' }
hilt-android-gradle = { module = 'com.google.dagger:hilt-android-gradle-plugin', version.ref = 'hilt' }
google-services = { module = 'com.google.gms:google-services', version.ref = 'google-services' }
firebase-crashlytics-gradle = { module = 'com.google.firebase:firebase-crashlytics-gradle', version.ref = 'firebase-gradle' }
oss-licenses = { module = 'com.google.android.gms:oss-licenses-plugin', version.ref = 'oss-licenses-version' }

# Android
android-material = 'com.google.android.material:material:1.4.0'

# AndroidX
androidx-appcompat = 'androidx.appcompat:appcompat:1.6.1'
androidx-constraintlayout = 'androidx.constraintlayout:constraintlayout:2.1.4'
androidx-core-ktx = 'androidx.core:core-ktx:1.12.0'
androidx-startup-runtime = 'androidx.startup:startup-runtime:1.1.1'
androidx-swiperefreshlayout = 'androidx.swiperefreshlayout:swiperefreshlayout:1.2.0-alpha01'
androidx-viewpager2 = 'androidx.viewpager2:viewpager2:1.0.0'

# AndroidX ViewModel
androidx-lifecycle-viewmodel-ktx = 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.7.0'
androidx-lifecycle-livedata = 'androidx.lifecycle:lifecycle-livedata:2.7.0'
androidx-activity-ktx = 'androidx.activity:activity-ktx:1.2.3'

desugarLibs = { module = "com.android.tools:desugar_jdk_libs", version.ref = "desugarJdk" }

# Firebase
firebase-bom = { module = 'com.google.firebase:firebase-bom', version.ref = 'firebase' }
firebase-messaging-ktx = { module = 'com.google.firebase:firebase-messaging-ktx' }
firebase-analytics-ktx = { module = 'com.google.firebase:firebase-analytics-ktx' }
firebase-crashlytics-ktx = { module = 'com.google.firebase:firebase-crashlytics-ktx' }

# Fragment
androidx-fragment-ktx = { module = 'androidx.fragment:fragment-ktx', version.ref = 'fragment' }
androidx-fragment-testing = { module = 'androidx.fragment:fragment-testing', version.ref = 'fragment' }

# Compose
compose-bom = { module = 'androidx.compose:compose-bom', version.ref = 'compose-bom' }
compose-foundation = { module = 'androidx.compose.foundation:foundation' }
compose-material = { module = 'androidx.compose.material:material' }
compose-material3 = { module = 'androidx.compose.material3:material3' }
compose-material-icons-core = { module = 'androidx.compose.material:material-icons-core' }
compose-material-icons-extended = { module = 'androidx.compose.material:material-icons-extended' }
compose-ui = { module = 'androidx.compose.ui:ui' }
compose-ui-test = { module = 'androidx.compose.ui:ui-test' }
compose-ui-test-junit4 = { module = 'androidx.compose.ui:ui-test-junit4' }
compose-ui-test-manifest = { module = 'androidx.compose.ui:ui-test-manifest' }
compose-ui-tooling = { module = 'androidx.compose.ui:ui-tooling' }
compose-ui-tooling-preview = { module = 'androidx.compose.ui:ui-tooling-preview' }

# Compose Interop
androidx-activity-compose = 'androidx.activity:activity-compose:1.7.1'
androidx-constraintlayout-compose = 'androidx.constraintlayout:constraintlayout-compose:1.0.1'
androidx-lifecycle-viewmodel-compose = 'androidx.lifecycle:lifecycle-viewmodel-compose:2.7.0'
androidx-lifecycle-runtime-compose = 'androidx.lifecycle:lifecycle-runtime-compose:2.7.0'
androidx-paging-compose = 'androidx.paging:paging-compose:3.2.1'
hilt-navigation-compose = 'androidx.hilt:hilt-navigation-compose:1.2.0'
androidx-navigation-compose = 'androidx.navigation:navigation-compose:2.7.7'
lottie-compose = 'com.airbnb.android:lottie-compose:4.2.2'

# Coil
coil = { module = 'io.coil-kt:coil', version.ref = 'coil' }
coil-gif = { module = 'io.coil-kt:coil-gif', version.ref = 'coil' }
coil-compose = { module = 'io.coil-kt:coil-compose', version.ref = 'coil' }

# Kotlin Coroutines
kotlinx-coroutines-android = { module = 'org.jetbrains.kotlinx:kotlinx-coroutines-android', version.ref = 'kotlinx-coroutines' }
kotlinx-coroutines-core = { module = 'org.jetbrains.kotlinx:kotlinx-coroutines-core', version.ref = 'kotlinx-coroutines' }
kotlinx-coroutines-reactive = { module = 'org.jetbrains.kotlinx:kotlinx-coroutines-reactive', version.ref = 'kotlinx-coroutines' }
kotlinx-coroutines-rxjava3 = { module = 'org.jetbrains.kotlinx:kotlinx-coroutines-rx3', version.ref = 'kotlinx-coroutines' }
# Test는 bundle로 묶지 말기 (필요한 모듈에서만 별도로 선언)
kotlinx-coroutines-test = { module = 'org.jetbrains.kotlinx:kotlinx-coroutines-test', version.ref = 'kotlinx-coroutines' }

# Hilt
androidx-hilt-compiler = 'androidx.hilt:hilt-compiler:1.0.0'
hilt-android = { module = 'com.google.dagger:hilt-android', version.ref = 'hilt' }
hilt-android-testing = { module = 'com.google.dagger:hilt-android-testing', version.ref = 'hilt' }
hilt-compiler = { module = 'com.google.dagger:hilt-compiler', version.ref = 'hilt' }

# OkHttp
okhttp-bom = { module = "com.squareup.okhttp3:okhttp-bom", version.ref = "okhttp" }
okhttp = { module = 'com.squareup.okhttp3:okhttp' }
okhttp-logging-interceptor = { module = 'com.squareup.okhttp3:logging-interceptor' }
okhttp-mockwebserver = { module = 'com.squareup.okhttp3:mockwebserver' }

# Paging3
androidx-paging-rxjava3 = { module = 'androidx.paging:paging-rxjava3', version.ref = 'paging' }
androidx-paging-common-ktx = { module = 'androidx.paging:paging-common-ktx', version.ref = 'paging' }
androidx-paging-runtime-ktx = { module = 'androidx.paging:paging-runtime-ktx', version.ref = 'paging' }

# Play Services
play-services-oss-licenses = 'com.google.android.gms:play-services-oss-licenses:17.0.0'
play-services-auth = 'com.google.android.gms:play-services-auth:21.1.1'

# Retrofit
retrofit-bom = { module = 'com.squareup.retrofit2:retrofit-bom', version.ref = 'retrofit' }
retrofit = { module = 'com.squareup.retrofit2:retrofit' }
retrofit-converter-gson = { module = 'com.squareup.retrofit2:converter-gson' }
retrofit-adapter-rxjava3 = { module = 'com.squareup.retrofit2:adapter-rxjava3' }

# Room
androidx-room-ktx = { module = 'androidx.room:room-ktx', version.ref = 'room' }
androidx-room-runtime = { module = 'androidx.room:room-runtime', version.ref = 'room' }
androidx-room-compiler = { module = 'androidx.room:room-compiler', version.ref = 'room' }
androidx-room-testing = { module = 'androidx.room:room-testing', version.ref = 'room' }
androidx-room-rxjava3 = { module = 'androidx.room:room-rxjava3', version.ref = 'room' }

# RxJava
rxandroid = 'io.reactivex.rxjava3:rxandroid:3.0.2'
rxjava = 'io.reactivex.rxjava3:rxjava:3.1.8'

# WorkManager
androidx-work-runtime-ktx = { module = 'androidx.work:work-runtime-ktx', version.ref = 'work' }
androidx-work-testing = { module = 'androidx.work:work-testing', version.ref = 'work' }
androidx-work-hilt = 'androidx.hilt:hilt-work:1.2.0'

# Unit Test
androidx-core-testing = 'androidx.arch.core:core-testing:2.2.0'
androidx-test-core = 'androidx.test:core:1.5.0'
mockito-core = 'org.mockito:mockito-core:5.12.0'
mockito-inline = 'org.mockito:mockito-inline:5.2.0'
mockito-kotlin = 'org.mockito.kotlin:mockito-kotlin:5.3.1'
junit = 'junit:junit:4.13.2'
robolectric = 'org.robolectric:robolectric:4.12.1'

# Android Test
androidx-espresso-core = 'androidx.test.espresso:espresso-core:3.5.1'
androidx-junit = 'androidx.test.ext:junit:1.1.5'
mockito-android = 'org.mockito:mockito-android:5.12.0'

# Other libraries
androidtagview = 'com.github.yeon-kyu:AndroidTagView:v1.1.7-alpha1'
keyboardvisibilityevent = 'net.yslibrary.keyboardvisibilityevent:keyboardvisibilityevent:3.0.0-RC3'
leakcanary-android = 'com.squareup.leakcanary:leakcanary-android:2.14'
pageindicatorview = 'com.romandanylyk:pageindicatorview:1.0.3'
shimmer = 'com.facebook.shimmer:shimmer:0.5.0'
timber = 'com.jakewharton.timber:timber:5.0.1'
holdableswipehandler = 'com.github.yeon-kyu.HoldableSwipeHandler:HoldableSwipeHandler:1.2.2'
semver = "net.swiftzer.semver:semver:2.0.0"

[bundles]
retrofit = [
    'retrofit',
    'retrofit-converter-gson',
    'retrofit-adapter-rxjava3'
]
compose = [
    'compose-foundation',
    'compose-material',
    'compose-material-icons-core',
    'compose-material-icons-extended',
    'compose-ui',
    'compose-ui-test',
    'compose-ui-test-junit4',
    'compose-ui-test-manifest',
    'compose-ui-tooling',
    'compose-ui-tooling-preview',
    'androidx-navigation-compose',
]
compose-interop = [
    'androidx-activity-compose',
    'hilt-navigation-compose',
    'androidx-lifecycle-viewmodel-compose',
    'androidx-paging-compose',
    'androidx-constraintlayout-compose',
    'lottie-compose',
    'androidx-lifecycle-runtime-compose',
]
coil = [
    'coil',
    'coil-gif',
    'coil-compose'
]
coroutines = [
    'kotlinx-coroutines-android',
    'kotlinx-coroutines-core',
    'kotlinx-coroutines-reactive',
    'kotlinx-coroutines-rxjava3',
]
firebase = [
    'firebase-analytics-ktx',
    'firebase-messaging-ktx',
    'firebase-crashlytics-ktx',
]
paging = [
    'androidx-paging-runtime-ktx',
    'androidx-paging-common-ktx',
    'androidx-paging-rxjava3',
]
rxjava = [
    'rxandroid',
    'rxjava',
]
viewmodel-ktx = [
    'androidx-lifecycle-viewmodel-ktx',
    'androidx-activity-ktx',
]
androidx-work = [
    'androidx-work-runtime-ktx',
    'androidx-work-hilt',
]
unit-test = [
    'mockito-core',
    'mockito-inline',
    'mockito-kotlin',
    'junit',
    'androidx-core-testing',
    'androidx-test-core',
    'robolectric',
]
android-test = [
    'mockito-android',
    'androidx-junit',
    'androidx-espresso-core',
]

[plugins]
android-application = { id = "com.android.application", version.ref = "android-gradle" }
android-library = { id = "com.android.library", version.ref = "android-gradle" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
dagger-hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
google-services = { id = "com.google.gms.google-services", version.ref = "google-services" }
crashlytics = { id = "com.google.firebase.crashlytics", version.ref = "crashlytics" }
